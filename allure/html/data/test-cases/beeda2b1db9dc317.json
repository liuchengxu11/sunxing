{
  "uid" : "beeda2b1db9dc317",
  "name" : "test_merchant_addorupdate",
  "fullName" : "TestSuite.CcsUserLoginController.test_merchat_addorupdate#test_merchant_addorupdate",
  "historyId" : "3bfbe23a96c24f0221a510b10c6d9432",
  "time" : {
    "start" : 1582607856069,
    "stop" : 1582607856069,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "TypeError: Object of type Response is not JSON serializable",
  "statusTrace" : "@pytest.fixture()\n    def Conftest():\n        uri = \"/api/user/login\"\n        allure.attach(uri, '地址', allure.attachment_type.TEXT)\n        data = {\n            \"account\": User_account,\n            \"password\": User_password\n        }\n        headers = {\n            'content-type': 'application/json'\n        }\n        allure.attach(json.dumps(data, ensure_ascii=False, indent=4), '请求', allure.attachment_type.TEXT)\n        allure.attach(json.dumps(headers, ensure_ascii=False, indent=4), '请求头', allure.attachment_type.TEXT)\n        comm = Common()\n        response = comm.post(uri, params=data, headers=headers)\n>       allure.attach(json.dumps(response, ensure_ascii=False, indent=4), '响应', allure.attachment_type.TEXT)\n\nTestSuite/CcsUserLoginController/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py:238: in dumps\n    **kw).encode(obj)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:201: in encode\n    chunks = list(chunks)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7f97a8239150>, o = <Response [200]>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type Response is not JSON serializable\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:179: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1582607856070,
      "stop" : 1582607856070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "Conftest",
    "time" : {
      "start" : 1582607856070,
      "stop" : 1582607856119,
      "duration" : 49
    },
    "status" : "broken",
    "statusMessage" : "TypeError: Object of type Response is not JSON serializable\n",
    "statusTrace" : "  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py\", line 923, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py\", line 783, in call_fixture_func\n    res = fixturefunc(**kwargs)\n  File \"/Users/liuchengxu/work/sunxing/sunxing/TestSuite/CcsUserLoginController/conftest.py\", line 23, in Conftest\n    allure.attach(json.dumps(response, ensure_ascii=False, indent=4), '响应', allure.attachment_type.TEXT)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "230b3f0be8f1760e",
      "name" : "地址",
      "source" : "230b3f0be8f1760e.txt",
      "type" : "text/plain",
      "size" : 15
    }, {
      "uid" : "da14aa99768650ff",
      "name" : "请求",
      "source" : "da14aa99768650ff.txt",
      "type" : "text/plain",
      "size" : 60
    }, {
      "uid" : "e708b8bb31c8f15d",
      "name" : "请求头",
      "source" : "e708b8bb31c8f15d.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "小程序登陆"
  }, {
    "name" : "story",
    "value" : "随便写写"
  }, {
    "name" : "epic",
    "value" : "隼骑士小程序"
  }, {
    "name" : "parentSuite",
    "value" : "TestSuite.CcsUserLoginController"
  }, {
    "name" : "suite",
    "value" : "test_merchat_addorupdate"
  }, {
    "name" : "subSuite"
  }, {
    "name" : "host",
    "value" : "liuchengxudeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "10190-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestSuite.CcsUserLoginController.test_merchat_addorupdate"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "beeda2b1db9dc317.json",
  "parameterValues" : [ ]
}