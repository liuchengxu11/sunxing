{"name": "test_merchant_addorupdate", "status": "broken", "statusDetails": {"message": "TypeError: Object of type Response is not JSON serializable", "trace": "@pytest.fixture()\n    def Conftest():\n        uri = \"/api/user/login\"\n        allure.attach(uri, '地址', allure.attachment_type.TEXT)\n        data = {\n            \"account\": User_account,\n            \"password\": User_password\n        }\n        headers = {\n            'content-type': 'application/json'\n        }\n        allure.attach(json.dumps(data, ensure_ascii=False, indent=4), '请求', allure.attachment_type.TEXT)\n        allure.attach(json.dumps(headers, ensure_ascii=False, indent=4), '请求头', allure.attachment_type.TEXT)\n        comm = Common()\n        response = comm.post(uri, params=data, headers=headers)\n>       allure.attach(json.dumps(response, ensure_ascii=False, indent=4), '响应', allure.attachment_type.TEXT)\n\nTestSuite/CcsUserLoginController/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py:238: in dumps\n    **kw).encode(obj)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:201: in encode\n    chunks = list(chunks)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7f97a8239150>, o = <Response [200]>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type Response is not JSON serializable\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py:179: TypeError"}, "start": 1582607856069, "stop": 1582607856069, "uuid": "861e1502-63b1-4ba9-aeeb-c80cc3b009ca", "historyId": "3bfbe23a96c24f0221a510b10c6d9432", "fullName": "TestSuite.CcsUserLoginController.test_merchat_addorupdate#test_merchant_addorupdate", "labels": [{"name": "feature", "value": "小程序登陆"}, {"name": "story", "value": "随便写写"}, {"name": "epic", "value": "隼骑士小程序"}, {"name": "parentSuite", "value": "TestSuite.CcsUserLoginController"}, {"name": "suite", "value": "test_merchat_addorupdate"}, {"name": "subSuite"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "10190-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite.CcsUserLoginController.test_merchat_addorupdate"}]}